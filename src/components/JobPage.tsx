
import { useState } from 'react';

interface CandidateProfileProps {
  jobTitle: string;
  salaryRange: string;
  location: string;
  skills: string[];
  applicationDate: string;
  status: string;
  companyInfo: string;
}

const CandidateProfile = ({ jobTitle, salaryRange, location, skills, applicationDate, status, companyInfo }: CandidateProfileProps) => {
  const [isApplied, setIsApplied] = useState(false);
  const [selectedSkills, setSelectedSkills] = useState<string[]>([]);
  const [jobPage, setJobPage] = useState(1);

  const handleApply = () => {
    setIsApplied(true);
    console.log('Applied for the job with skills:', selectedSkills);
  };

  const handleReviewCV = () => {
    console.log('Reviewing CV');
    // Th√™m logic xem CV ·ªü ƒë√¢y
  };

  const toggleSkill = (skill: string) => {
    setSelectedSkills((prev) =>
      prev.includes(skill) ? prev.filter((s) => s !== skill) : [...prev, skill]
    );
  };

  // L·∫•y ng√†y gi·ªù hi·ªán t·∫°i
  const currentDateTime = new Date().toLocaleString('vi-VN', {
    timeZone: 'Asia/Ho_Chi_Minh',
    hour12: false,
    year: 'numeric',
    month: '2-digit',
    day: '2-digit',
    hour: '2-digit',
    minute: '2-digit',
  });

  // D·ªØ li·ªáu c√¥ng vi·ªác n·ªïi b·∫≠t (l·∫•y t·ª´ App.tsx)
  const featuredJobs = [
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 4, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 7, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 1, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 6, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 5, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 3, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 2, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 9, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 5, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 3, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 2, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 9, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 5, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 3, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 2, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
    { company: 'FPT IS', title: 'Ki·ªÉm th·ª≠ ph·∫ßn m·ªÅm - Tester', location: 'Qu·∫≠n 9, TP.HCM', skills: ['SQL', 'Tester', 'Automation Tester'] },
  ];

  // Pagination logic for featured jobs
  const cardsPerPage = 6;
  const totalJobPages = Math.ceil(featuredJobs.length / cardsPerPage);
  const startJobIndex = (jobPage - 1) * cardsPerPage;
  const endJobIndex = jobPage === 1 && featuredJobs.length <= cardsPerPage ? featuredJobs.length : startJobIndex + cardsPerPage;
  const currentJobs = featuredJobs.slice(startJobIndex, endJobIndex);

  const handleJobNext = () => {
    if (jobPage < totalJobPages) setJobPage(jobPage + 1);
  };

  const handleJobPrev = () => {
    if (jobPage > 1) setJobPage(jobPage - 1);
  };

  return (
    <div className="candidate-profile-container">
      <div className="top-info-container">
        <div className="profile-section">
          <div className="profile-card">
            <h2>{jobTitle}</h2>
            <p><strong>Nh·∫≠p t·ª´:</strong> {salaryRange}</p>
            <div className="job-details">
              <p><span className="icon">üí∞</span> <strong>Thu nh·∫≠p:</strong> 15 - 30 tri·ªáu</p>
              <p><span className="icon">üìç</span> <strong>ƒê·ªãa ƒëi·ªÉm:</strong> {location}</p>
              <p><span className="icon">üíº</span> <strong>Kinh nghi·ªám:</strong> Kh√¥ng y√™u c·∫ßu</p>
            </div>
            <div className="skill-buttons">
              {skills.map((skill, index) => (
                <button key={index} className="skill-button">{skill}</button>
              ))}
            </div>
            <p><span className="deadline-icon">üìÖ</span> <strong>H·∫°n n·ªôp h·ªì s∆°:</strong> {applicationDate}</p>
            <div className="action-buttons">
              <button className="review-cv" onClick={handleReviewCV}>Review CV</button>
              <button className="apply-button" onClick={handleApply} disabled={isApplied}>
                {isApplied ? 'ƒê√£ ·ª©ng tuy·ªÉn' : '·ª®ng tuy·ªÉn'}
              </button>
            </div>
          </div>
        </div>
        <div className="general-info-section">
          <div className="info-card">
            <h2>Th√¥ng tin c√¥ng ty</h2>
            <p><strong>C√¥ng ty th√†nh vi√™n thu·ªôc FPT</strong></p>
            <p><strong>Quy m√¥:</strong> 2000 nh√¢n vi√™n</p>
            <p><strong>Lƒ©nh v·ª±c:</strong> Vi·ªÖn th√¥ng</p>
            <p><strong>ƒê·ªãa ƒëi·ªÉm:</strong> T·∫ßng 2, t√≤a nh√† FPT, Ph·ªë Duy T√¢n, C·∫ßu Gi·∫•y, H√† N·ªôi</p>
            <p><strong>Xem c√¥ng ty</strong></p>
          </div>
        </div>
      </div>

      <div className="additional-info-container">
        <div className="detail-info-section">
          <div className="info-card">
            <h2>Chi Ti·∫øt Tuy·ªÉn D·ª•ng</h2>
            <ul className="recruitment-details">
              <li>
                <strong>M√¥ t·∫£ c√¥ng vi·ªác</strong>
                <ul>
                  <li>T√¨m ki·∫øm v√† ph√°t tri·ªÉn kh√°ch h√†ng m·ªõi tr√™n ƒë·ªãa b√†n ƒë∆∞·ª£c ph√¢n c√¥ng</li>
                  <li>T∆∞ v·∫•n gi·∫£i ph√°p d·ªãch v·ª• vi·ªÖn th√¥ng ph√π h·ª£p v·ªõi nhu c·∫ßu kh√°ch h√†ng</li>
                  <li>Th·ª±c hi·ªán c√°c giao d·ªãch, chƒÉm s√≥c kh√°ch h√†ng hi·ªán t·∫°i</li>
                  <li>ƒê√°nh gi√° hi·ªáu qu·∫£ c√¥ng vi·ªác h√†ng ng√†y v√† b√°o c√°o ƒë·ªãnh k·ª≥</li>
                </ul>
              </li>
              <li>
                <strong>Y√™u c·∫ßu ·ª©ng vi√™n</strong>
                <ul>
                  <li>T·ªët nghi·ªáp THPT tr·ªü l√™n</li>
                  <li>Kh√¥ng y√™u c·∫ßu kinh nghi·ªám</li>
                  <li>C√≥ k·ªπ nƒÉng giao ti·∫øp t·ªët, nh·∫°y b√©n v·ªõi c√¥ng vi·ªác</li>
                  <li>
                    <strong>Y√™u c·∫ßu k·ªπ nƒÉng:</strong>
                    <div className="skill-buttons-container">
                      {['SQL', 'Tester', 'Automation'].map((skill) => (
                        <button
                          key={skill}
                          className={`skill-button ${selectedSkills.includes(skill) ? 'selected' : ''}`}
                          onClick={() => toggleSkill(skill)}
                        >
                          {skill}
                        </button>
                      ))}
                    </div>
                  </li>
                </ul>
              </li>
              <li>
                <strong>Quy·ªÅn l·ª£i</strong>
                <ul>
                  <li>L∆∞∆°ng c∆° b·∫£n: 10 - 20 tri·ªáu + hoa h·ªìng</li>
                  <li>Th∆∞·ªüng n√≥ng khi ƒë·∫°t KPI (15 - 60 tri·ªáu VND)</li>
                  <li>ƒê∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n, h·ªó tr·ª£ chi ph√≠ h·ªçc t·∫≠p</li>
                </ul>
              </li>
              <li>
                <strong>Quy·ªÅn l·ª£i kh√°c</strong>
                <ul>
                  <li>L∆∞∆°ng th√°ng 13, th∆∞·ªüng l·ªÖ T·∫øt</li>
                  <li>ƒê√≥ng BHXH, BHYT, BHTN theo quy ƒë·ªãnh</li>
                  <li>M√¥i tr∆∞·ªùng l√†m vi·ªác tr·∫ª trung, nƒÉng ƒë·ªông</li>
                </ul>
              </li>
              <li>
                <strong>Th√¥ng tin kh√°c</strong>
                <ul>
                  <li>Th·ªùi gian l√†m vi·ªác: 08:00 - 17:30 (Th·ª© 2 - Th·ª© 6)</li>
                  <li>ƒê·ªãa ƒëi·ªÉm l√†m vi·ªác: Qu·∫≠n 1, TP.HCM</li>
                  <li>Th·ªùi gian c·∫≠p nh·∫≠t: {currentDateTime}</li>
                </ul>
              </li>
              <li>
                <strong>Tuy·ªÉn d·ª•ng</strong>
                <ul>
                  <li>Thu nh·∫≠p: 10% - 15% + 40 tri·ªáu VND</li>
                  <li>L∆∞∆°ng c·ªë ƒë·ªãnh: 10.2 - 37.2 tri·ªáu VND</li>
                </ul>
              </li>
              <li>
                <strong>Quy·ªÅn l·ª£i</strong>
                <ul>
                  <li>M·ª©c l∆∞∆°ng: 15 - 60 tri·ªáu (t√πy theo nƒÉng l·ª±c)</li>
                  <li>ƒê∆∞·ª£c tham gia c√°c ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o n√¢ng cao nƒÉng l·ª±c</li>
                  <li>M√¥i tr∆∞·ªùng l√†m vi·ªác chuy√™n nghi·ªáp, c√≥ ƒë·ªãnh h∆∞·ªõng r√µ r√†ng</li>
                  <li>ƒê∆∞·ª£c ƒë√≥ng b·∫£o hi·ªÉm BHXH, BHYT, BHTN theo quy ƒë·ªãnh nh√† n∆∞·ªõc</li>
                  <li>Th∆∞·ªüng cu·ªëi nƒÉm, th∆∞·ªüng d·ª± √°n, l∆∞∆°ng th√°ng 13</li>
                </ul>
              </li>
              <li>
                <strong>ƒê·ªãa ƒëi·ªÉm l√†m vi·ªác</strong>
                <ul>
                  <li>Qu·∫≠n Minh Khai (Qu·∫≠n 9), TP.HCM</li>
                  <li>Qu·∫≠n 2, TP.HCM</li>
                </ul>
              </li>
              <li>
                <strong>Th·ªùi gian l√†m vi·ªác</strong>
                <ul>
                  <li>Th·ª© 2 - Th·ª© 6 (08:00 - 17:30)</li>
                  <li>Th·ª© 7 (08:00 - 12:00)</li>
                </ul>
              </li>
              <li>
                <strong>Th·ªùi gian c·∫≠p nh·∫≠t</strong>
                <ul>
                  <li>Th·ªùi gian: {currentDateTime}</li>
                </ul>
              </li>
            </ul>
            <div className="action-buttons">
              <button className="review-cv" onClick={handleReviewCV}>Review CV</button>
              <button className="apply-button" onClick={handleApply} disabled={isApplied}>
                {isApplied ? 'ƒê√£ ·ª©ng tuy·ªÉn' : '·ª®ng tuy·ªÉn'}
              </button>
            </div>
          </div>
        </div>
        <div className="general-info-section-extra">
          <div className="info-card">
            <h2>Th√¥ng Tin Chung</h2>
            <ul>
              <li><strong>C·∫•p b·∫≠c:</strong> Nh√¢n vi√™n</li>
              <li><strong>H·ªçc v·∫•n:</strong> Trung h·ªçc ph·ªï th√¥ng tr·ªü l√™n</li>
              <li><strong>S·ªë l∆∞·ª£ng:</strong> 15 ng∆∞·ªùi</li>
              <li><strong>H√¨nh th·ª©c l√†m vi·ªác:</strong> To√†n th·ªùi gian</li>
            </ul>
            <p><strong>Ng√†y n·ªôp h·ªì s∆°:</strong> 28/05/2025</p>
          </div>
        </div>
      </div>

      {/* Section c√¥ng vi·ªác n·ªïi b·∫≠t v·ªõi ph√¢n trang */}
      <div className="featured-section">
        <h2>C√¥ng vi·ªác n·ªïi b·∫≠t</h2>
        <div className="card-grid">
          {currentJobs.map((job, index) => (
            <div key={index} className="job-card">
              <h3>{job.company} - {job.title}</h3>
              <p>{job.location}</p>
              <ul>
                {job.skills.map((skill, idx) => (
                  <li key={idx}>{skill}</li>
                ))}
              </ul>
            </div>
          ))}
        </div>
        {featuredJobs.length > cardsPerPage && (
          <div className="pagination">
            <span
              onClick={handleJobPrev}
              style={{ cursor: jobPage > 1 ? 'pointer' : 'not-allowed' }}
            >
              ‚Üê
            </span>
            {' ‚Ä¢ '}
            <span>{jobPage}</span>
            {' ‚Ä¢ '}
            <span
              onClick={handleJobNext}
              style={{ cursor: jobPage < totalJobPages ? 'pointer' : 'not-allowed' }}
            >
              ‚Üí
            </span>
          </div>
        )}
      </div>
    </div>
  );
};

export default CandidateProfile;
